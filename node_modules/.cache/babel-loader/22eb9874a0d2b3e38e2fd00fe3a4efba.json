{"ast":null,"code":"var _jsxFileName = \"/home/mai/react-app-push&pull/my-app/src/shortpolling.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport PostData from './helpers/fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShortPolling = props => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [newMessages, setnewMessages] = useState([]);\n  let previousRequest = useRef(0);\n\n  const handleSubmit = e => {\n    let currentDateTime = Date.now();\n    e.preventDefault();\n    PostData('http://localhost:3001/messages', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message\n      })\n    }).then(() => setMessage(''));\n  };\n\n  useEffect(() => {\n    setInterval(async () => {\n      let currentDateTime = Date.now();\n      const data = await fetch('http://localhost:3001/messages', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Previous-DateTime': previousRequest.current\n        }\n      }).then(res => res.json());\n      previousRequest.current = currentDateTime;\n      setnewMessages(data);\n    }, 5000);\n  }, []);\n  useEffect(() => {\n    setMessages(messages.concat(newMessages));\n  }, [newMessages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control form-control-lg\",\n        type: \"text\",\n        placeholder: \"Enter your message\",\n        name: \"message\",\n        id: \"message\",\n        required: true,\n        onChange: e => setMessage(e.target.value),\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: messages.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: m.message\n      }, m.currentDateTime, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShortPolling, \"h1CjHspBTJZ2cqEptsderjgjSmw=\");\n\n_c = ShortPolling;\nexport default ShortPolling;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShortPolling\");","map":{"version":3,"sources":["/home/mai/react-app-push&pull/my-app/src/shortpolling.js"],"names":["useEffect","useRef","useState","PostData","ShortPolling","props","message","setMessage","messages","setMessages","newMessages","setnewMessages","previousRequest","handleSubmit","e","currentDateTime","Date","now","preventDefault","method","headers","body","JSON","stringify","then","setInterval","data","fetch","current","res","json","concat","target","value","map","m"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport PostData from './helpers/fetch';\n\nconst ShortPolling = (props)=>{\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [newMessages, setnewMessages] = useState([]);\n  let previousRequest = useRef(0);\n\n  const handleSubmit= (e)=>{\n    let currentDateTime = Date.now()\n    e.preventDefault();\n    PostData('http://localhost:3001/messages', \n    {\n        method:\"POST\",\n        headers:{\n            \"Content-Type\": \"application/json\",\n        },\n        body:JSON.stringify({message}),\n    }).then(()=>setMessage('')); \n  };\n\n  useEffect(()=>{\n    setInterval(async()=>{\n      let currentDateTime = Date.now();\n      const data = await fetch('http://localhost:3001/messages',{  \n        method:'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Previous-DateTime': previousRequest.current  \n        }\n      }).then((res)=>res.json());\n      previousRequest.current = currentDateTime;\n      setnewMessages(data);\n    }, 5000)\n  }, []);\n\n  useEffect(()=>{\n    setMessages(messages.concat(newMessages)) \n  },[newMessages]);\n  \n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <input className=\"form-control form-control-lg\" type=\"text\" placeholder=\"Enter your message\" \n          name=\"message\" id=\"message\" required onChange={((e)=>setMessage(e.target.value))} value={message}></input>\n      </form>\n      <h2>Messages</h2>\n      {/* {console.log(messages)} */}\n      <ul className=\"list-group\">\n        { \n          messages.map((m)=><li key={m.currentDateTime} className=\"list-group-item\">{m.message}</li>)\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default ShortPolling;"]},"metadata":{},"sourceType":"module"}